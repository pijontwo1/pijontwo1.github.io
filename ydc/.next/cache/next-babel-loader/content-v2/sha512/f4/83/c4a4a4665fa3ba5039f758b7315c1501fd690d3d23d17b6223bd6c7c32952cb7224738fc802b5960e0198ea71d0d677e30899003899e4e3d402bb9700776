{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\pijon\\\\react-tutorial\\\\YDConnect\\\\pages\\\\signin.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useCallback, useMemo } from \"react\";\nimport Link from \"next/link\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { ChakraProvider, Input, InputGroup, InputLeftElement, InputRightElement, Box, Button, Divider } from \"@chakra-ui/react\";\nimport { EmailIcon, LockIcon, ViewIcon, ViewOffIcon } from \"@chakra-ui/icons\";\nimport SignLayout from \"../components/SignLayout\";\nimport { GoogleLogin } from \"react-google-login\";\nimport KakaoLogin from \"react-kakao-login\";\n\nconst useYupValidationResolver = validationSchema => useCallback(async data => {\n  try {\n    const values = await validationSchema.validate(data, {\n      abortEarly: false\n    });\n    return {\n      values,\n      errors: {}\n    };\n  } catch (errors) {\n    return {\n      values: {},\n      errors: errors.inner.reduce((allErrors, currentError) => {\n        var _currentError$type;\n\n        return _objectSpread(_objectSpread({}, allErrors), {}, {\n          [currentError.path]: {\n            type: (_currentError$type = currentError.type) !== null && _currentError$type !== void 0 ? _currentError$type : \"validation\",\n            message: currentError.message\n          }\n        });\n      }, {})\n    };\n  }\n}, [validationSchema]);\n\nexport default function signin() {\n  var _errors$email, _errors$password;\n\n  const {\n    0: showPassword,\n    1: setShowPassword\n  } = useState(false);\n  const validationSchema = useMemo(() => yup.object({\n    email: yup.string().email(\"이메일 주소 형식이 아닙니다\").required(\"이메일 주소를 입력해주세요\"),\n    password: yup.string().min(8, \"비밀번호는 최소 8문자, 최대 16문자로 입력해 주세요\").max(16, \"비밀번호는 최소 8문자, 최대 16문자로 입력해 주세요\").required(\"비밀번호를 입력해주세요\")\n  }));\n  const resolver = useYupValidationResolver(validationSchema);\n  const {\n    handleSubmit,\n    register,\n    errors\n  } = useForm({\n    resolver\n  });\n\n  const handleFormSubmit = data => {\n    alert(\"서버와 연결되어있지않습니다.\"); // fetch(process.env.LocalHost + \"/signin\", {\n    //   method: \"post\",\n    //   headers: {\n    //     \"content-type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify({\n    //     email: data.email,\n    //     password: data.password,\n    //   }),\n    // })\n    //   .then((res) => res.json()) // => JSON body 를 JS로 변환\n    //   .then((res) => {\n    //     if (res[0] != null) {\n    //       if (res[0].email == data.email && res[0].password == data.password) {\n    //         alert(res[0].name + \"님 어서오세요\");\n    //         window.sessionStorage.setItem(\"email\", res[0].email);\n    //         window.sessionStorage.setItem(\"name\", res[0].name);\n    //         location.href = \"/\";\n    //       } else {\n    //         alert(\"로그인에 실패하였습니다.\\n정보를 불러올 수 없습니다.\");\n    //       }\n    //     } else {\n    //       alert(\"로그인실패\\n아이디와 비밀번호를 확인해주세요\");\n    //     }\n    //   });\n  };\n\n  const responseGoogle = response => {\n    // console.log(response);\n    // console.log(response.googleId);\n    // console.log(response.profileObj.name);\n    alert(response.profileObj.name + \" 님으로 로그인 성공\");\n  };\n\n  const responseKakao = response => {\n    console.log(response); // console.log(response.profile.id);\n    // console.log(response.profile.properties.nickname);\n  };\n\n  const responseFail = err => {\n    console.log(err);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    children: /*#__PURE__*/_jsxDEV(SignLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(handleFormSubmit),\n        children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n          mt: 3,\n          children: [/*#__PURE__*/_jsxDEV(InputLeftElement, {\n            pointerEvents: \"none\",\n            children: /*#__PURE__*/_jsxDEV(EmailIcon, {\n              color: \"gray.400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            type: \"text\",\n            placeholder: \"\\uC774\\uBA54\\uC77C\",\n            ref: register\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          pl: 2,\n          color: \"red\",\n          fontSize: \"0.85rem\",\n          children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          mt: 3,\n          children: [/*#__PURE__*/_jsxDEV(InputLeftElement, {\n            pointerEvents: \"none\",\n            children: /*#__PURE__*/_jsxDEV(LockIcon, {\n              color: \"gray.400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            type: showPassword ? \"text\" : \"password\",\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n            ref: register,\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n            children: showPassword ? /*#__PURE__*/_jsxDEV(ViewIcon, {\n              color: \"gray.400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(ViewOffIcon, {\n              color: \"gray.400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this),\n            onClick: e => {\n              setShowPassword(!showPassword);\n            },\n            cursor: \"pointer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          pl: 2,\n          color: \"red\",\n          fontSize: \"0.85rem\",\n          children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          mt: 5,\n          mb: 3,\n          colorScheme: \"blue\",\n          size: \"md\",\n          isFullWidth: true,\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: \"728145388139-7efv8sbus6ei2ga14m9009c46opu8eec.apps.googleusercontent.com\",\n          buttonText: \"\\uAD6C\\uAE00\\uC73C\\uB85C \\uB85C\\uADF8\\uC778\\uD558\\uAE30\",\n          onSuccess: responseGoogle,\n          onFailure: responseGoogle,\n          cookiePolicy: \"single_host_origin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(KakaoLogin, {\n          token: \"bf9cfd474116c62e93d93544758dda6e\",\n          buttonText: \"Kakao\",\n          onSuccess: responseKakao,\n          onFailure: responseFail,\n          getProfile: \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            mt: 3,\n            colorScheme: \"blue\",\n            size: \"md\",\n            variant: \"outline\",\n            isFullWidth: true,\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/accountIdFind\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            color: \"#0073e9\",\n            cursor: \"pointer\",\n            mt: \"3\",\n            float: \"right\",\n            fontSize: \"15px\",\n            children: \"\\uC544\\uC774\\uB514(\\uC774\\uBA54\\uC77C)/\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30 \\uFF1E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/pijon/react-tutorial/YDConnect/pages/signin.js"],"names":["React","useState","useCallback","useMemo","Link","yup","useForm","ChakraProvider","Input","InputGroup","InputLeftElement","InputRightElement","Box","Button","Divider","EmailIcon","LockIcon","ViewIcon","ViewOffIcon","SignLayout","GoogleLogin","KakaoLogin","useYupValidationResolver","validationSchema","data","values","validate","abortEarly","errors","inner","reduce","allErrors","currentError","path","type","message","signin","showPassword","setShowPassword","object","email","string","required","password","min","max","resolver","handleSubmit","register","handleFormSubmit","alert","responseGoogle","response","profileObj","name","responseKakao","console","log","responseFail","err","e"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SACEC,cADF,EAEEC,KAFF,EAGEC,UAHF,EAIEC,gBAJF,EAKEC,iBALF,EAMEC,GANF,EAOEC,MAPF,EAQEC,OARF,QASO,kBATP;AAUA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,QAA9B,EAAwCC,WAAxC,QAA2D,kBAA3D;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAEA,MAAMC,wBAAwB,GAAIC,gBAAD,IAC/BrB,WAAW,CACT,MAAOsB,IAAP,IAAgB;AACd,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMF,gBAAgB,CAACG,QAAjB,CAA0BF,IAA1B,EAAgC;AACnDG,MAAAA,UAAU,EAAE;AADuC,KAAhC,CAArB;AAIA,WAAO;AACLF,MAAAA,MADK;AAELG,MAAAA,MAAM,EAAE;AAFH,KAAP;AAID,GATD,CASE,OAAOA,MAAP,EAAe;AACf,WAAO;AACLH,MAAAA,MAAM,EAAE,EADH;AAELG,MAAAA,MAAM,EAAEA,MAAM,CAACC,KAAP,CAAaC,MAAb,CACN,CAACC,SAAD,EAAYC,YAAZ;AAAA;;AAAA,+CACKD,SADL;AAEE,WAACC,YAAY,CAACC,IAAd,GAAqB;AACnBC,YAAAA,IAAI,wBAAEF,YAAY,CAACE,IAAf,mEAAuB,YADR;AAEnBC,YAAAA,OAAO,EAAEH,YAAY,CAACG;AAFH;AAFvB;AAAA,OADM,EAQN,EARM;AAFH,KAAP;AAaD;AACF,CA1BQ,EA2BT,CAACZ,gBAAD,CA3BS,CADb;;AA+BA,eAAe,SAASa,MAAT,GAAkB;AAAA;;AAC/B,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCrC,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAMsB,gBAAgB,GAAGpB,OAAO,CAAC,MAC/BE,GAAG,CAACkC,MAAJ,CAAW;AACTC,IAAAA,KAAK,EAAEnC,GAAG,CACPoC,MADI,GAEJD,KAFI,CAEE,iBAFF,EAGJE,QAHI,CAGK,gBAHL,CADE;AAKTC,IAAAA,QAAQ,EAAEtC,GAAG,CACVoC,MADO,GAEPG,GAFO,CAEH,CAFG,EAEA,gCAFA,EAGPC,GAHO,CAGH,EAHG,EAGC,gCAHD,EAIPH,QAJO,CAIE,cAJF;AALD,GAAX,CAD8B,CAAhC;AAcA,QAAMI,QAAQ,GAAGxB,wBAAwB,CAACC,gBAAD,CAAzC;AACA,QAAM;AAAEwB,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BpB,IAAAA;AAA1B,MAAqCtB,OAAO,CAAC;AAAEwC,IAAAA;AAAF,GAAD,CAAlD;;AAEA,QAAMG,gBAAgB,GAAIzB,IAAD,IAAU;AACjC0B,IAAAA,KAAK,CAAC,iBAAD,CAAL,CADiC,CAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GA3BD;;AA6BA,QAAMC,cAAc,GAAIC,QAAD,IAAc;AACnC;AACA;AACA;AACAF,IAAAA,KAAK,CAACE,QAAQ,CAACC,UAAT,CAAoBC,IAApB,GAA2B,aAA5B,CAAL;AACD,GALD;;AAOA,QAAMC,aAAa,GAAIH,QAAD,IAAc;AAClCI,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EADkC,CAElC;AACA;AACD,GAJD;;AAMA,QAAMM,YAAY,GAAIC,GAAD,IAAS;AAC5BH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,GAFD;;AAIA,sBACE,QAAC,cAAD;AAAA,2BAIE,QAAC,UAAD;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAEZ,YAAY,CAACE,gBAAD,CAA5B;AAAA,gCAEE,QAAC,UAAD;AAAY,UAAA,EAAE,EAAE,CAAhB;AAAA,kCACE,QAAC,gBAAD;AACE,YAAA,aAAa,EAAC,MADhB;AAEE,YAAA,QAAQ,eAAE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA;AAFZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,WAAW,EAAC,oBAHd;AAIE,YAAA,GAAG,EAAED;AAJP;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAcE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,KAAK,EAAC,KAAlB;AAAwB,UAAA,QAAQ,EAAC,SAAjC;AAAA,qCACGpB,MAAM,CAACY,KADV,kDACG,cAAcL;AADjB;AAAA;AAAA;AAAA;AAAA,gBAdF,eAmBE,QAAC,UAAD;AAAY,UAAA,EAAE,EAAE,CAAhB;AAAA,kCACE,QAAC,gBAAD;AACE,YAAA,aAAa,EAAC,MADhB;AAEE,YAAA,QAAQ,eAAE,QAAC,QAAD;AAAU,cAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA;AAFZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,IAAI,EAAEE,YAAY,GAAG,MAAH,GAAY,UAFhC;AAGE,YAAA,WAAW,EAAC,0BAHd;AAIE,YAAA,GAAG,EAAEW,QAJP;AAKE,YAAA,YAAY,EAAC;AALf;AAAA;AAAA;AAAA;AAAA,kBALF,eAYE,QAAC,iBAAD;AACE,YAAA,QAAQ,EACNX,YAAY,gBACV,QAAC,QAAD;AAAU,cAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,oBADU,gBAGV,QAAC,WAAD;AAAa,cAAA,KAAK,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,oBALN;AAQE,YAAA,OAAO,EAAGuB,CAAD,IAAO;AACdtB,cAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD,aAVH;AAWE,YAAA,MAAM,EAAC;AAXT;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBF,eA6CE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,KAAK,EAAC,KAAlB;AAAwB,UAAA,QAAQ,EAAC,SAAjC;AAAA,wCACGT,MAAM,CAACe,QADV,qDACG,iBAAiBR;AADpB;AAAA;AAAA;AAAA;AAAA,gBA7CF,eAkDE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,EAAE,EAAE,CAFN;AAGE,UAAA,EAAE,EAAE,CAHN;AAIE,UAAA,WAAW,EAAC,MAJd;AAKE,UAAA,IAAI,EAAC,IALP;AAME,UAAA,WAAW,MANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlDF,eA4DE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBA5DF,eA8DE,QAAC,WAAD;AACE,UAAA,QAAQ,EAAC,0EADX;AAEE,UAAA,UAAU,EAAC,yDAFb;AAGE,UAAA,SAAS,EAAEgB,cAHb;AAIE,UAAA,SAAS,EAAEA,cAJb;AAKE,UAAA,YAAY,EAAE;AALhB;AAAA;AAAA;AAAA;AAAA,gBA9DF,eAsEE,QAAC,UAAD;AACE,UAAA,KAAK,EAAC,kCADR;AAEE,UAAA,UAAU,EAAC,OAFb;AAGE,UAAA,SAAS,EAAEI,aAHb;AAIE,UAAA,SAAS,EAAEG,YAJb;AAKE,UAAA,UAAU,EAAC;AALb;AAAA;AAAA;AAAA;AAAA,gBAtEF,eA+EE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,SAAX;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,EAAE,EAAE,CADN;AAEE,YAAA,WAAW,EAAC,MAFd;AAGE,YAAA,IAAI,EAAC,IAHP;AAIE,YAAA,OAAO,EAAC,SAJV;AAKE,YAAA,WAAW,MALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA/EF,eA2FE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,gBAAX;AAAA,iCACE,QAAC,GAAD;AACE,YAAA,KAAK,EAAC,SADR;AAEE,YAAA,MAAM,EAAC,SAFT;AAGE,YAAA,EAAE,EAAC,GAHL;AAIE,YAAA,KAAK,EAAC,OAJR;AAKE,YAAA,QAAQ,EAAC,MALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA3FF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAgHD","sourcesContent":["import React, { useState, useCallback, useMemo } from \"react\";\r\nimport Link from \"next/link\";\r\nimport * as yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  ChakraProvider,\r\n  Input,\r\n  InputGroup,\r\n  InputLeftElement,\r\n  InputRightElement,\r\n  Box,\r\n  Button,\r\n  Divider,\r\n} from \"@chakra-ui/react\";\r\nimport { EmailIcon, LockIcon, ViewIcon, ViewOffIcon } from \"@chakra-ui/icons\";\r\nimport SignLayout from \"../components/SignLayout\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport KakaoLogin from \"react-kakao-login\";\r\n\r\nconst useYupValidationResolver = (validationSchema) =>\r\n  useCallback(\r\n    async (data) => {\r\n      try {\r\n        const values = await validationSchema.validate(data, {\r\n          abortEarly: false,\r\n        });\r\n\r\n        return {\r\n          values,\r\n          errors: {},\r\n        };\r\n      } catch (errors) {\r\n        return {\r\n          values: {},\r\n          errors: errors.inner.reduce(\r\n            (allErrors, currentError) => ({\r\n              ...allErrors,\r\n              [currentError.path]: {\r\n                type: currentError.type ?? \"validation\",\r\n                message: currentError.message,\r\n              },\r\n            }),\r\n            {}\r\n          ),\r\n        };\r\n      }\r\n    },\r\n    [validationSchema]\r\n  );\r\n\r\nexport default function signin() {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const validationSchema = useMemo(() =>\r\n    yup.object({\r\n      email: yup\r\n        .string()\r\n        .email(\"이메일 주소 형식이 아닙니다\")\r\n        .required(\"이메일 주소를 입력해주세요\"),\r\n      password: yup\r\n        .string()\r\n        .min(8, \"비밀번호는 최소 8문자, 최대 16문자로 입력해 주세요\")\r\n        .max(16, \"비밀번호는 최소 8문자, 최대 16문자로 입력해 주세요\")\r\n        .required(\"비밀번호를 입력해주세요\"),\r\n    })\r\n  );\r\n\r\n  const resolver = useYupValidationResolver(validationSchema);\r\n  const { handleSubmit, register, errors } = useForm({ resolver });\r\n\r\n  const handleFormSubmit = (data) => {\r\n    alert(\"서버와 연결되어있지않습니다.\");\r\n    // fetch(process.env.LocalHost + \"/signin\", {\r\n    //   method: \"post\",\r\n    //   headers: {\r\n    //     \"content-type\": \"application/json\",\r\n    //   },\r\n    //   body: JSON.stringify({\r\n    //     email: data.email,\r\n    //     password: data.password,\r\n    //   }),\r\n    // })\r\n    //   .then((res) => res.json()) // => JSON body 를 JS로 변환\r\n    //   .then((res) => {\r\n    //     if (res[0] != null) {\r\n    //       if (res[0].email == data.email && res[0].password == data.password) {\r\n    //         alert(res[0].name + \"님 어서오세요\");\r\n    //         window.sessionStorage.setItem(\"email\", res[0].email);\r\n    //         window.sessionStorage.setItem(\"name\", res[0].name);\r\n    //         location.href = \"/\";\r\n    //       } else {\r\n    //         alert(\"로그인에 실패하였습니다.\\n정보를 불러올 수 없습니다.\");\r\n    //       }\r\n    //     } else {\r\n    //       alert(\"로그인실패\\n아이디와 비밀번호를 확인해주세요\");\r\n    //     }\r\n    //   });\r\n  };\r\n\r\n  const responseGoogle = (response) => {\r\n    // console.log(response);\r\n    // console.log(response.googleId);\r\n    // console.log(response.profileObj.name);\r\n    alert(response.profileObj.name + \" 님으로 로그인 성공\");\r\n  };\r\n\r\n  const responseKakao = (response) => {\r\n    console.log(response);\r\n    // console.log(response.profile.id);\r\n    // console.log(response.profile.properties.nickname);\r\n  };\r\n\r\n  const responseFail = (err) => {\r\n    console.log(err);\r\n  };\r\n\r\n  return (\r\n    <ChakraProvider>\r\n      {/* <head>\r\n        <script src=\"https://developers.kakao.com/sdk/js/kakao.js\"></script>\r\n      </head> */}\r\n      <SignLayout>\r\n        <form onSubmit={handleSubmit(handleFormSubmit)}>\r\n          {/* 이메일 */}\r\n          <InputGroup mt={3}>\r\n            <InputLeftElement\r\n              pointerEvents=\"none\"\r\n              children={<EmailIcon color=\"gray.400\" />}\r\n            />\r\n            <Input\r\n              name=\"email\"\r\n              type=\"text\"\r\n              placeholder=\"이메일\"\r\n              ref={register}\r\n            />\r\n          </InputGroup>\r\n          <Box pl={2} color=\"red\" fontSize=\"0.85rem\">\r\n            {errors.email?.message}\r\n          </Box>\r\n\r\n          {/* 비밀번호 */}\r\n          <InputGroup mt={3}>\r\n            <InputLeftElement\r\n              pointerEvents=\"none\"\r\n              children={<LockIcon color=\"gray.400\" />}\r\n            />\r\n            <Input\r\n              name=\"password\"\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              placeholder=\"비밀번호\"\r\n              ref={register}\r\n              autoComplete=\"off\"\r\n            />\r\n            <InputRightElement\r\n              children={\r\n                showPassword ? (\r\n                  <ViewIcon color=\"gray.400\" />\r\n                ) : (\r\n                  <ViewOffIcon color=\"gray.400\" />\r\n                )\r\n              }\r\n              onClick={(e) => {\r\n                setShowPassword(!showPassword);\r\n              }}\r\n              cursor=\"pointer\"\r\n            />\r\n          </InputGroup>\r\n          <Box pl={2} color=\"red\" fontSize=\"0.85rem\">\r\n            {errors.password?.message}\r\n          </Box>\r\n\r\n          {/* 로그인 버튼 */}\r\n          <Button\r\n            type=\"submit\"\r\n            mt={5}\r\n            mb={3}\r\n            colorScheme=\"blue\"\r\n            size=\"md\"\r\n            isFullWidth\r\n          >\r\n            로그인\r\n          </Button>\r\n          <Divider />\r\n\r\n          <GoogleLogin\r\n            clientId=\"728145388139-7efv8sbus6ei2ga14m9009c46opu8eec.apps.googleusercontent.com\"\r\n            buttonText=\"구글으로 로그인하기\"\r\n            onSuccess={responseGoogle}\r\n            onFailure={responseGoogle}\r\n            cookiePolicy={\"single_host_origin\"}\r\n          />\r\n\r\n          <KakaoLogin\r\n            token=\"bf9cfd474116c62e93d93544758dda6e\"\r\n            buttonText=\"Kakao\"\r\n            onSuccess={responseKakao}\r\n            onFailure={responseFail}\r\n            getProfile=\"true\"\r\n          />\r\n\r\n          {/* 회원가입 화면 이동 버튼 */}\r\n          <Link href=\"/signup\">\r\n            <Button\r\n              mt={3}\r\n              colorScheme=\"blue\"\r\n              size=\"md\"\r\n              variant=\"outline\"\r\n              isFullWidth\r\n            >\r\n              회원가입\r\n            </Button>\r\n          </Link>\r\n\r\n          <Link href=\"/accountIdFind\">\r\n            <Box\r\n              color=\"#0073e9\"\r\n              cursor=\"pointer\"\r\n              mt=\"3\"\r\n              float=\"right\"\r\n              fontSize=\"15px\"\r\n            >\r\n              아이디(이메일)/비밀번호 찾기 ＞\r\n            </Box>\r\n          </Link>\r\n        </form>\r\n      </SignLayout>\r\n    </ChakraProvider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}