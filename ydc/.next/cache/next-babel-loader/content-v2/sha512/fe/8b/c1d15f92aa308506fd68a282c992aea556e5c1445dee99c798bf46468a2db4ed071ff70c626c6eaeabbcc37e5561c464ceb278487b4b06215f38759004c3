{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\pijon\\\\react-tutorial\\\\YDConnect\\\\pages\\\\signup.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useCallback, useMemo, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { ChakraProvider, Input, InputGroup, InputLeftElement, InputRightElement, Box, Stack, Flex, Checkbox, Button, Divider, Text } from \"@chakra-ui/react\";\nimport { RiUserFill } from \"react-icons/ri\";\nimport { EmailIcon, LockIcon, ViewIcon, ViewOffIcon, PhoneIcon } from \"@chakra-ui/icons\";\nimport SignLayout from \"../components/SignLayout\";\nimport ModalButton from \"../components/Modal\";\n\nconst useYupValidationResolver = validationSchema => useCallback(async data => {\n  try {\n    const values = await validationSchema.validate(data, {\n      abortEarly: false\n    });\n    return {\n      values,\n      errors: {}\n    };\n  } catch (errors) {\n    return {\n      values: {},\n      errors: errors.inner.reduce((allErrors, currentError) => {\n        var _currentError$type;\n\n        return _objectSpread(_objectSpread({}, allErrors), {}, {\n          [currentError.path]: {\n            type: (_currentError$type = currentError.type) !== null && _currentError$type !== void 0 ? _currentError$type : \"validation\",\n            message: currentError.message\n          }\n        });\n      }, {})\n    };\n  }\n}, [validationSchema]);\n\nexport default function signup() {\n  var _errors$email, _errors$password, _errors$passwordConfi, _errors$name, _errors$phone, _errors$termsCheck;\n\n  // useEffect(() => {\n  //   fetch(process.env.LocalHost + \"/signupAgree\")\n  //     .then((res) => res.json())\n  //     .then((res) => {\n  //       setAgreeTos(res[0].content);\n  //       setAgreePersonal(res[1].content);\n  //     });\n  // });\n  const {\n    0: agreePersoanl,\n    1: setAgreePersonal\n  } = useState();\n  const {\n    0: agreeTos,\n    1: setAgreeTos\n  } = useState();\n  const {\n    0: showPassword,\n    1: setShowPassword\n  } = useState([false, false]);\n\n  const clickShowButton = (index, e) => {\n    const value = showPassword[index]; // TODO\n    // 리팩토링\n\n    if (index === 0) {\n      setShowPassword([!value, showPassword[1]]);\n    } else if (index === 1) {\n      setShowPassword([showPassword[0], !value]);\n    } else {}\n  };\n\n  const {\n    0: checkedItems,\n    1: setCheckedItems\n  } = useState([false, false]);\n  const allChecked = checkedItems.every(Boolean);\n  const isIndeterminate = checkedItems.some(Boolean) && !allChecked;\n  const validationSchema = useMemo(() => yup.object({\n    email: yup.string().email(\"이메일 주소 형식이 아닙니다\").required(\"이메일 주소를 입력해주세요\"),\n    password: yup.string().min(8, \"비밀번호는 최소 8문자, 최대 16문자로 입력해 주세요\").max(16, \"비밀번호는 최소 8문자, 최대 16문자로 입력해 주세요\").required(\"비밀번호를 입력해주세요\"),\n    passwordConfirm: yup.string().oneOf([yup.ref(\"password\"), null], \"비밀번호가 일치하지 않습니다\").required(\"비밀번호를 입력해주세요\"),\n    name: yup.string().min(2, \"이름은 최소 2문자로 입력해주세요\").required(\"이름을 입력해주세요\"),\n    phone: yup.number().required(\"휴대폰 번호를 입력해주세요\").typeError(\"-없이 숫자만 입력해주세요\"),\n    termsCheck: yup.boolean().oneOf([true], \"전체 이용약관에 동의하지 않았습니다\")\n  }));\n  const resolver = useYupValidationResolver(validationSchema);\n  const {\n    handleSubmit,\n    register,\n    errors\n  } = useForm({\n    resolver\n  }); //중복체크\n\n  const {\n    0: isCheckEmail,\n    1: setIsCheckEmail\n  } = useState(false);\n  const {\n    0: changeEmail,\n    1: setChangeEmail\n  } = useState(\"\");\n  const {\n    0: changePhone,\n    1: setChangePhone\n  } = useState(\"\");\n\n  const emailChange = e => {\n    setChangeEmail(e.target.value);\n    setIsCheckEmail(false);\n  };\n\n  const phoneChange = e => {\n    setChangePhone(e.target.value);\n  };\n\n  const CheckEmail = () => {\n    if (changeEmail == \"\") {\n      alert(\"이메일를 입력해주세요\");\n    } else {\n      fetch(process.env.LocalHost + \"/signupCheck\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: changeEmail\n        })\n      }).then(res => res.json()).then(res => {\n        if (res[0] == null) {\n          alert(\"사용 가능한 이메일입니다.\");\n          setIsCheckEmail(true);\n        } else {\n          alert(\"이미 사용중인 이메일입니다.\");\n        }\n      });\n    }\n  };\n\n  const handleFormSubmit = data => {\n    if (isCheckEmail) {\n      fetch(process.env.LocalHost + \"/signup\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: data.email,\n          password: data.password,\n          name: data.name,\n          phone: changePhone\n        })\n      }).then(res => {\n        res.json();\n        alert(\"회원가입이 완료되었습니다.\");\n        location.href = \"/\";\n      });\n    } else {\n      alert(\"아이디 중복확인을 해주세요\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    children: /*#__PURE__*/_jsxDEV(SignLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(handleFormSubmit),\n        children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n          mt: 3,\n          children: [/*#__PURE__*/_jsxDEV(InputLeftElement, {\n            pointerEvents: \"none\",\n            children: /*#__PURE__*/_jsxDEV(EmailIcon, {\n              color: \"gray.400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            type: \"email\",\n            placeholder: \"\\uC774\\uBA54\\uC77C\",\n            ref: register,\n            onChange: emailChange,\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            w: \"70px\",\n            fontSize: \"13px\",\n            fontWeight: \"normal\",\n            letterSpacing: \"-2px\",\n            onClick: CheckEmail,\n            children: \"\\uC911\\uBCF5\\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          pl: 2,\n          color: \"red\",\n          fontSize: \"0.85rem\",\n          children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          mt: 3,\n          children: [/*#__PURE__*/_jsxDEV(InputLeftElement, {\n            pointerEvents: \"none\",\n            children: /*#__PURE__*/_jsxDEV(LockIcon, {\n              color: \"gray.400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            type: showPassword[0] ? \"text\" : \"password\",\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCD5C\\uC18C8\\uC5D0\\uC11C \\uCD5C\\uB300 16\\uC790\\uB9AC\",\n            ref: register,\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n            children: showPassword[0] ? /*#__PURE__*/_jsxDEV(ViewIcon, {\n              color: \"gray.400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(ViewOffIcon, {\n              color: \"gray.400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this),\n            onClick: e => {\n              clickShowButton(0, e);\n            },\n            cursor: \"pointer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          pl: 2,\n          color: \"red\",\n          fontSize: \"0.85rem\",\n          children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          mt: 3,\n          children: [/*#__PURE__*/_jsxDEV(InputLeftElement, {\n            pointerEvents: \"none\",\n            children: /*#__PURE__*/_jsxDEV(LockIcon, {\n              color: \"gray.400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"passwordConfirm\",\n            type: showPassword[1] ? \"text\" : \"password\",\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n            ref: register,\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n            children: showPassword[1] ? /*#__PURE__*/_jsxDEV(ViewIcon, {\n              color: \"gray.400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(ViewOffIcon, {\n              color: \"gray.400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 19\n            }, this),\n            onClick: e => {\n              clickShowButton(1, e);\n            },\n            cursor: \"pointer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          pl: 2,\n          color: \"red\",\n          fontSize: \"0.85rem\",\n          children: (_errors$passwordConfi = errors.passwordConfirm) === null || _errors$passwordConfi === void 0 ? void 0 : _errors$passwordConfi.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          mt: 3,\n          children: [/*#__PURE__*/_jsxDEV(InputLeftElement, {\n            pointerEvents: \"none\",\n            children: /*#__PURE__*/_jsxDEV(RiUserFill, {\n              color: \"#A0AEC0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            autoComplete: \"off\",\n            name: \"name\",\n            type: \"text\",\n            placeholder: \"\\uC774\\uB984\",\n            ref: register\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          pl: 2,\n          color: \"red\",\n          fontSize: \"0.85rem\",\n          children: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          mt: 3,\n          children: [/*#__PURE__*/_jsxDEV(InputLeftElement, {\n            pointerEvents: \"none\",\n            children: /*#__PURE__*/_jsxDEV(PhoneIcon, {\n              color: \"gray.400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"phone\",\n            type: \"text\",\n            placeholder: \"\\uD734\\uB300\\uD3F0 \\uBC88\\uD638 ( - \\uC5C6\\uC774 \\uC22B\\uC790\\uB9CC)\",\n            ref: register,\n            autoComplete: \"off\",\n            onChange: phoneChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          pl: 2,\n          color: \"red\",\n          fontSize: \"0.85rem\",\n          children: (_errors$phone = errors.phone) === null || _errors$phone === void 0 ? void 0 : _errors$phone.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          p: 2,\n          mt: 3,\n          spacing: 1,\n          border: \"1px\",\n          borderColor: \"gray.200\",\n          borderRadius: \"md\",\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            name: \"termsCheck\",\n            isChecked: allChecked,\n            isIndeterminate: isIndeterminate,\n            onChange: e => {\n              setCheckedItems([e.target.checked, e.target.checked]);\n            },\n            ref: register,\n            children: \"\\uC804\\uCCB4 \\uB3D9\\uC758\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            justify: \"space-between\",\n            align: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              isChecked: checkedItems[0],\n              onChange: e => {\n                setCheckedItems([e.target.checked, checkedItems[1]]);\n              },\n              children: \"\\uC640\\uC774\\uB514\\uCEE4\\uB125\\uD2B8\\uC0F5 \\uC774\\uC6A9\\uC57D\\uAD00 \\uB3D9\\uC758\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ModalButton, {\n              title: \"\\uC640\\uC774\\uB514\\uCEE4\\uB125\\uD2B8\\uC0F5 \\uC774\\uC6A9\\uC57D\\uAD00\",\n              content: agreeTos\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            justify: \"space-between\",\n            align: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              isChecked: checkedItems[1],\n              onChange: e => {\n                setCheckedItems([checkedItems[0], e.target.checked]);\n              },\n              children: \"\\uAC1C\\uC778\\uC815\\uBCF4 \\uC218\\uC9D1 \\uBC0F \\uC774\\uC6A9 \\uB3D9\\uC758\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ModalButton, {\n              title: \"\\uAC1C\\uC778\\uC815\\uBCF4 \\uC218\\uC9D1 \\uBC0F \\uC774\\uC6A9\",\n              content: agreePersoanl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          pl: 2,\n          color: \"red\",\n          fontSize: \"0.85rem\",\n          children: (_errors$termsCheck = errors.termsCheck) === null || _errors$termsCheck === void 0 ? void 0 : _errors$termsCheck.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          mt: 5,\n          mb: 3,\n          colorScheme: \"blue\",\n          size: \"md\",\n          isFullWidth: true,\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/signin\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            mt: 3,\n            colorScheme: \"blue\",\n            size: \"md\",\n            variant: \"outline\",\n            isFullWidth: true,\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/pijon/react-tutorial/YDConnect/pages/signup.js"],"names":["React","useState","useCallback","useMemo","useEffect","Link","yup","useForm","ChakraProvider","Input","InputGroup","InputLeftElement","InputRightElement","Box","Stack","Flex","Checkbox","Button","Divider","Text","RiUserFill","EmailIcon","LockIcon","ViewIcon","ViewOffIcon","PhoneIcon","SignLayout","ModalButton","useYupValidationResolver","validationSchema","data","values","validate","abortEarly","errors","inner","reduce","allErrors","currentError","path","type","message","signup","agreePersoanl","setAgreePersonal","agreeTos","setAgreeTos","showPassword","setShowPassword","clickShowButton","index","e","value","checkedItems","setCheckedItems","allChecked","every","Boolean","isIndeterminate","some","object","email","string","required","password","min","max","passwordConfirm","oneOf","ref","name","phone","number","typeError","termsCheck","boolean","resolver","handleSubmit","register","isCheckEmail","setIsCheckEmail","changeEmail","setChangeEmail","changePhone","setChangePhone","emailChange","target","phoneChange","CheckEmail","alert","fetch","process","env","LocalHost","method","headers","body","JSON","stringify","then","res","json","handleFormSubmit","location","href","checked"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useMemo, useEffect } from \"react\";\r\nimport Link from \"next/link\";\r\nimport * as yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  ChakraProvider,\r\n  Input,\r\n  InputGroup,\r\n  InputLeftElement,\r\n  InputRightElement,\r\n  Box,\r\n  Stack,\r\n  Flex,\r\n  Checkbox,\r\n  Button,\r\n  Divider,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { RiUserFill } from \"react-icons/ri\";\r\nimport {\r\n  EmailIcon,\r\n  LockIcon,\r\n  ViewIcon,\r\n  ViewOffIcon,\r\n  PhoneIcon,\r\n} from \"@chakra-ui/icons\";\r\n\r\nimport SignLayout from \"../components/SignLayout\";\r\nimport ModalButton from \"../components/Modal\";\r\n\r\nconst useYupValidationResolver = (validationSchema) =>\r\n  useCallback(\r\n    async (data) => {\r\n      try {\r\n        const values = await validationSchema.validate(data, {\r\n          abortEarly: false,\r\n        });\r\n\r\n        return {\r\n          values,\r\n          errors: {},\r\n        };\r\n      } catch (errors) {\r\n        return {\r\n          values: {},\r\n          errors: errors.inner.reduce(\r\n            (allErrors, currentError) => ({\r\n              ...allErrors,\r\n              [currentError.path]: {\r\n                type: currentError.type ?? \"validation\",\r\n                message: currentError.message,\r\n              },\r\n            }),\r\n            {}\r\n          ),\r\n        };\r\n      }\r\n    },\r\n    [validationSchema]\r\n  );\r\n\r\nexport default function signup() {\r\n  // useEffect(() => {\r\n  //   fetch(process.env.LocalHost + \"/signupAgree\")\r\n  //     .then((res) => res.json())\r\n  //     .then((res) => {\r\n  //       setAgreeTos(res[0].content);\r\n  //       setAgreePersonal(res[1].content);\r\n  //     });\r\n  // });\r\n\r\n  const [agreePersoanl, setAgreePersonal] = useState();\r\n  const [agreeTos, setAgreeTos] = useState();\r\n  const [showPassword, setShowPassword] = useState([false, false]);\r\n  const clickShowButton = (index, e) => {\r\n    const value = showPassword[index];\r\n\r\n    // TODO\r\n    // 리팩토링\r\n    if (index === 0) {\r\n      setShowPassword([!value, showPassword[1]]);\r\n    } else if (index === 1) {\r\n      setShowPassword([showPassword[0], !value]);\r\n    } else {\r\n    }\r\n  };\r\n\r\n  const [checkedItems, setCheckedItems] = useState([false, false]);\r\n  const allChecked = checkedItems.every(Boolean);\r\n  const isIndeterminate = checkedItems.some(Boolean) && !allChecked;\r\n\r\n  const validationSchema = useMemo(() =>\r\n    yup.object({\r\n      email: yup\r\n        .string()\r\n        .email(\"이메일 주소 형식이 아닙니다\")\r\n        .required(\"이메일 주소를 입력해주세요\"),\r\n      password: yup\r\n        .string()\r\n        .min(8, \"비밀번호는 최소 8문자, 최대 16문자로 입력해 주세요\")\r\n        .max(16, \"비밀번호는 최소 8문자, 최대 16문자로 입력해 주세요\")\r\n        .required(\"비밀번호를 입력해주세요\"),\r\n      passwordConfirm: yup\r\n        .string()\r\n        .oneOf([yup.ref(\"password\"), null], \"비밀번호가 일치하지 않습니다\")\r\n        .required(\"비밀번호를 입력해주세요\"),\r\n      name: yup\r\n        .string()\r\n        .min(2, \"이름은 최소 2문자로 입력해주세요\")\r\n        .required(\"이름을 입력해주세요\"),\r\n      phone: yup\r\n        .number()\r\n        .required(\"휴대폰 번호를 입력해주세요\")\r\n        .typeError(\"-없이 숫자만 입력해주세요\"),\r\n      termsCheck: yup\r\n        .boolean()\r\n        .oneOf([true], \"전체 이용약관에 동의하지 않았습니다\"),\r\n    })\r\n  );\r\n\r\n  const resolver = useYupValidationResolver(validationSchema);\r\n  const { handleSubmit, register, errors } = useForm({ resolver });\r\n\r\n  //중복체크\r\n  const [isCheckEmail, setIsCheckEmail] = useState(false);\r\n  const [changeEmail, setChangeEmail] = useState(\"\");\r\n  const [changePhone, setChangePhone] = useState(\"\");\r\n  const emailChange = (e) => {\r\n    setChangeEmail(e.target.value);\r\n    setIsCheckEmail(false);\r\n  };\r\n\r\n  const phoneChange = (e) => {\r\n    setChangePhone(e.target.value);\r\n  };\r\n\r\n  const CheckEmail = () => {\r\n    if (changeEmail == \"\") {\r\n      alert(\"이메일를 입력해주세요\");\r\n    } else {\r\n      fetch(process.env.LocalHost + \"/signupCheck\", {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          email: changeEmail,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          if (res[0] == null) {\r\n            alert(\"사용 가능한 이메일입니다.\");\r\n            setIsCheckEmail(true);\r\n          } else {\r\n            alert(\"이미 사용중인 이메일입니다.\");\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = (data) => {\r\n    if (isCheckEmail) {\r\n      fetch(process.env.LocalHost + \"/signup\", {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          email: data.email,\r\n          password: data.password,\r\n          name: data.name,\r\n          phone: changePhone,\r\n        }),\r\n      }).then((res) => {\r\n        res.json();\r\n        alert(\"회원가입이 완료되었습니다.\");\r\n        location.href = \"/\";\r\n      });\r\n    } else {\r\n      alert(\"아이디 중복확인을 해주세요\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ChakraProvider>\r\n      <SignLayout>\r\n        <form onSubmit={handleSubmit(handleFormSubmit)}>\r\n          {/* 이메일 */}\r\n          <InputGroup mt={3}>\r\n            <InputLeftElement\r\n              pointerEvents=\"none\"\r\n              children={<EmailIcon color=\"gray.400\" />}\r\n            />\r\n            <Input\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"이메일\"\r\n              ref={register}\r\n              onChange={emailChange}\r\n              autoComplete=\"off\"\r\n            />\r\n            <Button\r\n              w=\"70px\"\r\n              fontSize=\"13px\"\r\n              fontWeight=\"normal\"\r\n              letterSpacing=\"-2px\"\r\n              onClick={CheckEmail}\r\n            >\r\n              중복확인\r\n            </Button>\r\n          </InputGroup>\r\n          <Box pl={2} color=\"red\" fontSize=\"0.85rem\">\r\n            {errors.email?.message}\r\n          </Box>\r\n\r\n          {/* 비밀번호 */}\r\n          <InputGroup mt={3}>\r\n            <InputLeftElement\r\n              pointerEvents=\"none\"\r\n              children={<LockIcon color=\"gray.400\" />}\r\n            />\r\n            <Input\r\n              name=\"password\"\r\n              type={showPassword[0] ? \"text\" : \"password\"}\r\n              placeholder=\"비밀번호 최소8에서 최대 16자리\"\r\n              ref={register}\r\n              autoComplete=\"off\"\r\n            />\r\n            <InputRightElement\r\n              children={\r\n                showPassword[0] ? (\r\n                  <ViewIcon color=\"gray.400\" />\r\n                ) : (\r\n                  <ViewOffIcon color=\"gray.400\" />\r\n                )\r\n              }\r\n              onClick={(e) => {\r\n                clickShowButton(0, e);\r\n              }}\r\n              cursor=\"pointer\"\r\n            />\r\n          </InputGroup>\r\n          <Box pl={2} color=\"red\" fontSize=\"0.85rem\">\r\n            {errors.password?.message}\r\n          </Box>\r\n\r\n          {/* 비밀번호 확인 */}\r\n          <InputGroup mt={3}>\r\n            <InputLeftElement\r\n              pointerEvents=\"none\"\r\n              children={<LockIcon color=\"gray.400\" />}\r\n            />\r\n            <Input\r\n              name=\"passwordConfirm\"\r\n              type={showPassword[1] ? \"text\" : \"password\"}\r\n              placeholder=\"비밀번호 확인\"\r\n              ref={register}\r\n              autoComplete=\"off\"\r\n            />\r\n            <InputRightElement\r\n              children={\r\n                showPassword[1] ? (\r\n                  <ViewIcon color=\"gray.400\" />\r\n                ) : (\r\n                  <ViewOffIcon color=\"gray.400\" />\r\n                )\r\n              }\r\n              onClick={(e) => {\r\n                clickShowButton(1, e);\r\n              }}\r\n              cursor=\"pointer\"\r\n            />\r\n          </InputGroup>\r\n          <Box pl={2} color=\"red\" fontSize=\"0.85rem\">\r\n            {errors.passwordConfirm?.message}\r\n          </Box>\r\n\r\n          {/* 이름 */}\r\n          <InputGroup mt={3}>\r\n            <InputLeftElement\r\n              pointerEvents=\"none\"\r\n              children={<RiUserFill color=\"#A0AEC0\" />}\r\n            />\r\n            <Input\r\n              autoComplete=\"off\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"이름\"\r\n              ref={register}\r\n            />\r\n          </InputGroup>\r\n          <Box pl={2} color=\"red\" fontSize=\"0.85rem\">\r\n            {errors.name?.message}\r\n          </Box>\r\n\r\n          {/* 휴대폰 번호 */}\r\n          <InputGroup mt={3}>\r\n            <InputLeftElement\r\n              pointerEvents=\"none\"\r\n              children={<PhoneIcon color=\"gray.400\" />}\r\n            />\r\n            <Input\r\n              name=\"phone\"\r\n              type=\"text\"\r\n              placeholder=\"휴대폰 번호 ( - 없이 숫자만)\"\r\n              ref={register}\r\n              autoComplete=\"off\"\r\n              onChange={phoneChange}\r\n            />\r\n          </InputGroup>\r\n          <Box pl={2} color=\"red\" fontSize=\"0.85rem\">\r\n            {errors.phone?.message}\r\n          </Box>\r\n\r\n          {/* 이용약관 */}\r\n          <Stack\r\n            p={2}\r\n            mt={3}\r\n            spacing={1}\r\n            border=\"1px\"\r\n            borderColor=\"gray.200\"\r\n            borderRadius=\"md\"\r\n          >\r\n            <Checkbox\r\n              name=\"termsCheck\"\r\n              isChecked={allChecked}\r\n              isIndeterminate={isIndeterminate}\r\n              onChange={(e) => {\r\n                setCheckedItems([e.target.checked, e.target.checked]);\r\n              }}\r\n              ref={register}\r\n            >\r\n              전체 동의\r\n            </Checkbox>\r\n            <Flex justify=\"space-between\" align=\"center\">\r\n              <Checkbox\r\n                isChecked={checkedItems[0]}\r\n                onChange={(e) => {\r\n                  setCheckedItems([e.target.checked, checkedItems[1]]);\r\n                }}\r\n              >\r\n                와이디커넥트샵 이용약관 동의\r\n              </Checkbox>\r\n              <ModalButton title=\"와이디커넥트샵 이용약관\" content={agreeTos} />\r\n            </Flex>\r\n            <Flex justify=\"space-between\" align=\"center\">\r\n              <Checkbox\r\n                isChecked={checkedItems[1]}\r\n                onChange={(e) => {\r\n                  setCheckedItems([checkedItems[0], e.target.checked]);\r\n                }}\r\n              >\r\n                개인정보 수집 및 이용 동의\r\n              </Checkbox>\r\n              <ModalButton\r\n                title=\"개인정보 수집 및 이용\"\r\n                content={agreePersoanl}\r\n              />\r\n            </Flex>\r\n          </Stack>\r\n          <Box pl={2} color=\"red\" fontSize=\"0.85rem\">\r\n            {errors.termsCheck?.message}\r\n          </Box>\r\n\r\n          {/* 회원가입 버튼 */}\r\n          <Button\r\n            type=\"submit\"\r\n            mt={5}\r\n            mb={3}\r\n            colorScheme=\"blue\"\r\n            size=\"md\"\r\n            isFullWidth\r\n          >\r\n            회원가입\r\n          </Button>\r\n          <Divider />\r\n\r\n          {/* 로그인 화면 이동 버튼 */}\r\n          <Link href=\"/signin\">\r\n            <Button\r\n              mt={3}\r\n              colorScheme=\"blue\"\r\n              size=\"md\"\r\n              variant=\"outline\"\r\n              isFullWidth\r\n            >\r\n              로그인\r\n            </Button>\r\n          </Link>\r\n        </form>\r\n      </SignLayout>\r\n    </ChakraProvider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}